name: 'Publish NPM - patch'
description: 'Bump patch version and publish to npm'
inputs:
  gh-pat:
    description: 'GitHub PAT with repo access to push the tagging commit'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'

    - name: Install
      shell: bash
      run: npm ci

    - name: Read user identity from PAT
      id: who
      env:
        GH_TOKEN: ${{ inputs.gh-pat }}
      run: |
        name=$(gh api /user --jq '.name // .login')
        # requires user:email scope - may be empty if user hides email
        email=$(gh api /user/emails --jq '.[] | select(.primary==true).email' | head -n1)
        
        # fallback to noreply if email is empty
        if [ -z "$email" ]; then
          login=$(gh api /user --jq .login)
          uid=$(gh api /user --jq .id)
          email="${uid}+${login}@users.noreply.github.com"
        fi
        
        echo "name=$name"   >> $GITHUB_OUTPUT
        echo "email=$email" >> $GITHUB_OUTPUT

    - name: Configure git author
      run: |
        git config user.name  "${{ steps.who.outputs.name }}"
        git config user.email "${{ steps.who.outputs.email }}"

    - name: Configure git remote to push commit and tags with PAT
      env:
        PAT:  ${{ inputs.gh-pat }}
        REPO: ${{ github.repository }}
      run: |
        git remote set-url origin "https://x-access-token:${PAT}@github.com/${REPO}.git"

    - name: Bump version
      shell: bash
      run: npm version patch

    - name: Publish to npm
      shell: bash
      env:
        NODE_AUTH_TOKEN: ${{ env.NODE_AUTH_TOKEN }}
      run: |
        npm publish
